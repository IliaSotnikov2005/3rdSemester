// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Data;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(NUnitWebDbContext))]
    [Migration("20250214200945_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("MyNUnit.TestAssemblyResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssemblyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Failed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ignored")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Passed")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TestRunResultId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TestRunResultId");

                    b.ToTable("TestAssemblyResult");
                });

            modelBuilder.Entity("MyNUnit.TestClassResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Errored")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Failed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ignored")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Passed")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TestAssemblyResultId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TestClassName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TestAssemblyResultId");

                    b.ToTable("TestClassResult");
                });

            modelBuilder.Entity("MyNUnit.TestResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TestClassResultId")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("TimeElapsed")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TestClassResultId");

                    b.ToTable("TestResult");
                });

            modelBuilder.Entity("MyNUnit.TestRunResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Failed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ignored")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Passed")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("TestRunResult");
                });

            modelBuilder.Entity("WebAPI.Models.TestRun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LaunchTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("ResultId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ResultId");

                    b.ToTable("TestRuns");
                });

            modelBuilder.Entity("MyNUnit.TestAssemblyResult", b =>
                {
                    b.HasOne("MyNUnit.TestRunResult", null)
                        .WithMany("TestAssemblyResults")
                        .HasForeignKey("TestRunResultId");
                });

            modelBuilder.Entity("MyNUnit.TestClassResult", b =>
                {
                    b.HasOne("MyNUnit.TestAssemblyResult", null)
                        .WithMany("TestClassResults")
                        .HasForeignKey("TestAssemblyResultId");
                });

            modelBuilder.Entity("MyNUnit.TestResult", b =>
                {
                    b.HasOne("MyNUnit.TestClassResult", null)
                        .WithMany("TestResults")
                        .HasForeignKey("TestClassResultId");
                });

            modelBuilder.Entity("WebAPI.Models.TestRun", b =>
                {
                    b.HasOne("MyNUnit.TestRunResult", "Result")
                        .WithMany()
                        .HasForeignKey("ResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Result");
                });

            modelBuilder.Entity("MyNUnit.TestAssemblyResult", b =>
                {
                    b.Navigation("TestClassResults");
                });

            modelBuilder.Entity("MyNUnit.TestClassResult", b =>
                {
                    b.Navigation("TestResults");
                });

            modelBuilder.Entity("MyNUnit.TestRunResult", b =>
                {
                    b.Navigation("TestAssemblyResults");
                });
#pragma warning restore 612, 618
        }
    }
}
